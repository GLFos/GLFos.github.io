This Dataset displays a number of credit card transactions made during September, 2013. 
It is highly unbalanced, with positive cases of fraud making up only 0.17% of all transactions.

The steps taken throughout this process have been documented in the comments of the Credit_Card_Fraud.py file, but the methodology and findings will be expaned on here. 
The first steps were to extract the data and perform basic ETL functions.
The file was cleaned by dropping any duplicates or missing values from the dataset.
This was followed by classifying the data into two types; fraud and normal transactions.
This was followed by a quick examination of the data table and count plot of each class. 

Next, target variables were created and the data was properly scaled.
A train_test_split was peformed with a test size of 30% and a random_state of 42. A logistic regression was chosen with a total of 10,000 iterations.
It is important to note that the "fit_intercept = False" within the regression model was chosen given the outcome of the test, which will be explored.
The pipeline was then established with StandardScaler and the logistic regression model.
Hyperparameter tuning was carried out with a param_grid containing {"model__fit_intercept": [True,False]}, a scoring of "neg_mean_squared_error", and a cross-validation of 5.

The results of the model are satisfactory.
The accuracy is 1.00, so considerably high.
The precision of the model is adequate, sitting at 0.80.
The recall had a score of 0.76.
The F1 Score was a 0.78, a good balance between precision and recall.

The best parameters for the model was forgoing the intercept term, so the decision origin will pass through the origin instead of a constant value.
The best score is rounded to ~0.0007.

In Conclusion, the model performed adequately on the given test data, but may struggle with new data. More testing and refining should take place before being used legitimately.